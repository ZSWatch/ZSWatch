name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04
    container: ghcr.io/zephyrproject-rtos/ci:v0.26.2
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    strategy:
      matrix:
        built_type: [debug, release]
        board: [zswatch_nrf5340_cpuapp@1, zswatch_nrf5340_cpuapp@3, native_posix, nrf5340dk_nrf5340_cpuapp]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ZSWatch
          submodules: recursive

      - name: Dependencies
        run: |
          sudo apt update
          sudo apt install astyle

      - name: Initialize
        working-directory: ZSWatch
        run: |
          west init -l app
          west update -o=--depth=1 -n
      
      - name: Style
        working-directory: ZSWatch
        run: |
          west format --dry-run

      - name: Build firmware
        working-directory: ZSWatch
        run: |
          west build app --build-dir ${{ matrix.board }}_${{ matrix.built_type }} -p -b ${{ matrix.board }} -- -DOVERLAY_CONFIG=boards/${{ matrix.built_type }}.conf
          cd ${{ matrix.board }}_${{ matrix.built_type }}/zephyr
          mv zephyr.hex ${{ matrix.board }}_${{ matrix.built_type }}.hex || true

      - name: Build firmware for iOS
        working-directory: ZSWatch
        run: |
          west build app --build-dir ${{ matrix.board }}_${{ matrix.built_type }}_ios -p -b ${{ matrix.board }} -- -DOVERLAY_CONFIG=boards/${{ matrix.built_type }}.conf -DCONFIG_BLE_USES_AMS="y"
          cd ${{ matrix.board }}_${{ matrix.built_type }}/zephyr
          mv zephyr.hex ${{ matrix.board }}_${{ matrix.built_type }}.hex || true
      
      - name : Upload Firmware
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.board }}_${{ matrix.built_type }}
          path: ZSWatch/${{ matrix.board }}_${{ matrix.built_type }}/zephyr/${{ matrix.board }}_${{ matrix.built_type }}.hex
          if-no-files-found: ignore
