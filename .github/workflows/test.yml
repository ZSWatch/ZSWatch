on: [workflow_call]

jobs:
  test:
    runs-on: [self-hosted, Linux, X64, ZSWatch]
    container: 
      image: ghcr.io/zephyrproject-rtos/zephyr-build:v0.26.2
      volumes:
        - /dev/bus/usb/:/dev/bus/usb
      options: --privileged

    strategy:
      matrix:
         devices: [{hardware_revision: 5, jlink_device: 760208506}, {hardware_revision: 3, jlink_device: 760208490}, {hardware_revision: 3, jlink_device: 760208484}]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        continue-on-error: true # JLink install will fail
        run: |
          arch=$(arch)
          echo "Detected arch: ${arch}"
          if [ "${arch}" = "x86_64" ]; then
              echo "x64 Architecture"
              JLINK_NAME=JLink_Linux_V796t_x86_64
              NRF_NAME=nrf-command-line-tools_10.24.2_amd64
          elif [ "${arch}" = "aarch64" ]; then
              echo "ARM 64 Architecture"
              JLINK_NAME=JLink_Linux_V796t_arm
              NRF_NAME=nrf-command-line-tools_10.24.2_arm64
          fi

          sudo apt-get -qq update

          if [ ! -f "`which JLinkExe`" ]; then
            echo "Installing JLink tools..."
            wget -q --post-data 'accept_license_agreement=accepted&non_emb_ctr=confirmed&submit=Download+software' https://www.segger.com/downloads/jlink/${JLINK_NAME}.deb
            sudo apt-get -y install ./${JLINK_NAME}.deb &>/dev/null
          fi

          if [ ! -f "`which nrfjprog`" ]; then
            echo "Installing Nordic command line tools..."
            wget -q https://nsscprodmedia.blob.core.windows.net/prod/software-and-other-downloads/desktop-software/nrf-command-line-tools/sw/versions-10-x-x/10-24-2/${NRF_NAME}.deb
            sudo apt-get -y install ./${NRF_NAME}.deb &>/dev/null
            export PATH=$PATH:/opt
          fi

          python -m pip install --upgrade pip
          pip install -r app/pytest/requirements.txt

      - name: Download debug image
        uses: actions/download-artifact@v4
        with:
          name: zswatch_nrf5340_cpuapp@${{ matrix.devices.hardware_revision }}_debug

      - name: Test with pytest
        run: |
          pip install pytest
          pytest --html=report/report.html --jlink=${{ matrix.devices.jlink_device }} --hw=${{ matrix.devices.hardware_revision }} app/pytest/

      - name : Publish results
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ matrix.devices.jlink_device }}_${{ matrix.devices.hardware_revision }}
          path: |
            report
          if-no-files-found: ignore