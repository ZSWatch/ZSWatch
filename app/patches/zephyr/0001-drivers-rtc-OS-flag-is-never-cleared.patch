From cb74eddff74044ab50ed06c2e46e1eda48442758 Mon Sep 17 00:00:00 2001
From: Daniel Kampert <DanielKampert@kampis-elektroecke.de>
Date: Tue, 27 Aug 2024 13:16:19 +0200
Subject: [PATCH] drivers: rtc: OS flag is never cleared

Clear the OS flag when reading the time
and when the flag is set. Also clear the
flag once during the initialization.

Signed-off-by: Daniel Kampert <DanielKampert@kampis-elektroecke.de>
---
 drivers/rtc/rtc_rv8263.c | 22 +++++++++++++++++++---
 1 file changed, 19 insertions(+), 3 deletions(-)

diff --git a/drivers/rtc/rtc_rv8263.c b/drivers/rtc/rtc_rv8263.c
index f3cf86c6c7a..bd950d96b59 100644
--- a/drivers/rtc/rtc_rv8263.c
+++ b/drivers/rtc/rtc_rv8263.c
@@ -249,6 +249,9 @@ static int rv8263c8_time_get(const struct device *dev, struct rtc_time *timeptr)
 
 	/* Return an error when the oscillator is stopped. */
 	if (regs[0] & RV8263_BM_OS) {
+		/* Clear the OS flag. */
+		regs[0] &= ~RV8263_BM_OS;
+		i2c_reg_write_byte_dt(&config->i2c_bus, RV8263C8_REGISTER_SECONDS, regs[0]);
 		return -ENODATA;
 	}
 
@@ -281,7 +284,7 @@ static int rv8263c8_time_get(const struct device *dev, struct rtc_time *timeptr)
 static int rv8263c8_init(const struct device *dev)
 {
 	int err;
-	int temp;
+	uint8_t temp;
 	struct rv8263c8_data *data = dev->data;
 	const struct rv8263c8_config *config = dev->config;
 
@@ -323,6 +326,20 @@ static int rv8263c8_init(const struct device *dev)
 
 	LOG_DBG("Configure ClkOut: %u", temp);
 
+	/* Clear the OS flag initialy. */
+	err = i2c_reg_read_byte_dt(&config->i2c_bus, RV8263C8_REGISTER_SECONDS, &temp);
+	if (err < 0) {
+		return err;
+	}
+
+	if (temp & RV8263_BM_OS) {
+		err = i2c_reg_write_byte_dt(&config->i2c_bus, RV8263C8_REGISTER_SECONDS, temp);
+		if (err < 0) {
+			LOG_ERR("Error while clearing OS flag! Error: %i", err);
+			return err;
+		}
+	}
+
 #if CONFIG_RTC_UPDATE && DT_ANY_INST_HAS_PROP_STATUS_OKAY(int_gpios)
 	uint8_t buf[2];
 
@@ -712,8 +729,7 @@ static const struct rtc_driver_api rv8263c8_driver_api = {
 	static const struct rv8263c8_config rv8263c8_config_##inst = {                             \
 		.i2c_bus = I2C_DT_SPEC_INST_GET(inst),                                             \
 		.clkout = DT_INST_ENUM_IDX(inst, clkout),                                          \
-		IF_ENABLED(DT_ANY_INST_HAS_PROP_STATUS_OKAY(int_gpios),                            \
-			   (.int_gpio = GPIO_DT_SPEC_INST_GET_OR(inst, int_gpios, {0})))};         \
+		IF_ENABLED(1, (.int_gpio = GPIO_DT_SPEC_INST_GET_OR(inst, int_gpios, {0})))};      \
 	DEVICE_DT_INST_DEFINE(inst, &rv8263c8_init, NULL, &rv8263c8_data_##inst,                   \
 			      &rv8263c8_config_##inst, POST_KERNEL, CONFIG_RTC_INIT_PRIORITY,      \
 			      &rv8263c8_driver_api);
-- 
2.34.1

