<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>ZSWatch Blog</title>
        <link>https://zswatch.dev/blog</link>
        <description>ZSWatch Blog</description>
        <lastBuildDate>Fri, 10 Oct 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Power conusumption, HW update & Production test]]></title>
            <link>https://zswatch.dev/blog/progress-hw-xip-usb-power</link>
            <guid>https://zswatch.dev/blog/progress-hw-xip-usb-power</guid>
            <pubDate>Fri, 10 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[As usual, a lot has landed since our last update, but much of it hasn’t been very visual, so the updates here have been quiet. On hardware, we focused on revision two of the Devkit and the heart‑rate test PCB. On software, we optimized power (especially reducing XIP power draw), improved firmware updates over BLE and USB (WebSerial), and added a couple of apps. We also built a dedicated production test application to verify hardware functions during manufacturing. Below is a quick tour, plus a short technical deep‑dive on how XIP works on ZSWatch and why it matters for battery life.]]></description>
            <content:encoded><![CDATA[<p>As usual, a lot has landed since our last update, but much of it hasn’t been very visual, so the updates here have been quiet. On hardware, we focused on revision two of the Devkit and the heart‑rate test PCB. On software, we optimized power (especially reducing XIP power draw), improved firmware updates over BLE and USB (WebSerial), and added a couple of apps. We also built a dedicated production test application to verify hardware functions during manufacturing. Below is a quick tour, plus a short technical deep‑dive on how XIP works on ZSWatch and why it matters for battery life.</p>
<p>Let’s dive into the details...</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="devkit-v2-ordered-likely-final-version">DevKit v2 ordered (likely final version)<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#devkit-v2-ordered-likely-final-version" class="hash-link" aria-label="Direct link to DevKit v2 ordered (likely final version)" title="Direct link to DevKit v2 ordered (likely final version)">​</a></h3>
<p>Last week we ordered what we believe is the final iteration of the ZSWatch Devkit (#2). We expect to receive it in about three weeks. As a trial for fulfillment, we plan to sell a limited quantity (at least initially) through <a href="https://www.elecrow.com/" target="_blank" rel="noopener noreferrer">https://www.elecrow.com</a>. We’ll set up a shop there shortly. Make sure to sign up on the email list to not miss it!</p>
<a href="https://zswatch.dev/assets/images/dk-1-2-render-8fb8ffa0dca1acc6c226f8a5fa3d0976.png" target="_blank" rel="noopener noreferrer"><img src="https://zswatch.dev/assets/images/dk-1-2-render-8fb8ffa0dca1acc6c226f8a5fa3d0976.png" alt="ZSWatch Devkit v1.2 render"></a>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="heart-rate-board-v2">Heart Rate board v2<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#heart-rate-board-v2" class="hash-link" aria-label="Direct link to Heart Rate board v2" title="Direct link to Heart Rate board v2">​</a></h3>
<p>We also received version 2 of the heart‑rate test board, and it’s working well. Compared to the v1 prototype from the earlier post (<a href="https://zswatch.dev/blog/progress-hr-fota">Health PCB and Firmware Update</a>), v2 includes bug fixes and a simplified optical front‑end and an extra photodiode:</p>
<ul>
<li><a href="https://look.ams-osram.com/m/1a73f8d425cfcc40/original/SFH-7016.pdf" target="_blank" rel="noopener noreferrer">Single LED module: OSRAM SFH 7016 (Red, Green, IR)</a></li>
<li><a href="https://www.vishay.com/docs/80381/vemd8082.pdf" target="_blank" rel="noopener noreferrer">Two photodiodes: Vishay VEMD8082</a></li>
</ul>
<a href="https://zswatch.dev/assets/images/hr_v2_dk-6dd37889027a3847c22ecfe484eb48fa.png" target="_blank" rel="noopener noreferrer"><img src="https://zswatch.dev/assets/images/hr_v2_dk-6dd37889027a3847c22ecfe484eb48fa.png" alt="Heart‑Rate test board v2 on Devkit"></a>
<div style="display:flex;align-items:center;gap:16px;margin:0.25rem 0"><a href="https://www.pcbway.com/" target="_blank" rel="noopener noreferrer" style="display:inline-block;line-height:0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 3.9 996.9 279.4" style="width:220px;display:block"><path fill-rule="evenodd" d="M522.6 197.4c187.1-5.5 315.9 6.3 474.3 26.1l-6.6 4.5c-132.3-9.4-216.7-24-364.6-19.8-237.5 6.2-436.5 37.9-625.7 75.1l5.6-26.5q63.8-12.1 128.1-21.8 64.6-9.8 129.1-17.1 64.6-7.6 129.6-12.5 64.9-5.2 130.2-8" style="fill:#e46622"></path><path fill-rule="evenodd" d="m322.6 40.7-21.9 20.8Q277.8 37.9 250 37.9q-5.6 0-11.1 1-5.2 1.1-10.4 3.2-5.2 2-9.7 5.2-4.9 2.7-8.7 6.9-3.8 3.8-7 8.4-3.1 4.5-5.2 9.7-2.1 4.9-3.1 10.4-1 5.2-1 10.8 0 3.8.3 7.6.3 3.9 1.4 7.3.7 3.9 2.1 7.3 1.4 3.5 3.1 7 1.7 3.1 4.2 5.9 2 3.1 4.8 5.6 2.5 2.4 5.2 4.5 3.2 2.1 6.3 3.8 3.5 1.7 6.9 3.1 3.5 1.4 7.3 2.5 3.5.7 7.3 1.4 3.8.3 7.6.3 3.2 0 6.3-.3 3.1-.4 6.6-1.1 3.1-.3 6.2-1.4 3.2-1 5.9-2.4 3.5-1.8 7-3.5 3.1-2.1 6.2-4.5 3.2-2.1 6.3-4.9 2.8-2.4 5.5-5.2l21.2 21.9q-3.8 3.8-7.6 7.3-4.2 3.5-8.7 6.6-4.2 3.1-8.7 5.9-4.8 2.5-9.3 4.9-4.6 1.7-9.1 3.1-4.8 1.4-9.4 2.1-4.8 1-9.3 1.4-4.9.3-9.7.3-38.2 0-62.9-24.3-24.6-24-24.6-62.2 0-5.6.6-11.5.7-5.5 2.1-11.1t3.5-10.8q2.4-5.2 5.2-10.1 2.8-4.8 6.3-9.3 3.4-4.2 7.6-8.4 3.8-3.8 8.7-6.9 4.5-3.5 9.4-5.9 5.2-2.8 10.4-5.2 5.5-2.1 11.1-3.5 5.5-1.4 11.4-2.1t11.8-.7q4.9 0 10.1.3 4.9.7 10.1 1.8 4.8 1 9.7 2.4 4.9 1.8 9.4 3.8 4.8 2.1 9.4 4.9 4.1 2.4 8.3 5.6 4.2 3.1 8 6.6 3.8 3.4 7.3 7.3M19.4 183.9V6.3h57.3q33 0 42.7 2.7 3.9 1.1 7.3 2.5 3.9 1.7 7 3.8 3.5 2.4 6.2 5.2 2.8 2.8 5.2 5.9 2.5 3.5 4.6 7.7 2 4.1 3.4 8.7 1.4 4.5 2.1 9 .4 4.5.4 9 0 3.5-.4 7.3-.3 3.5-1 7-.7 3.4-1.8 6.6-1.4 3.5-2.7 6.6-1.4 2.8-3.2 5.2-1.7 2.1-3.4 4.5l-4.2 4.2q-2.1 1.7-4.5 3.5-2.1 1.7-4.2 2.7-2.4 1.4-4.5 2.5-2.4 1-4.9 1.7-2.4 1.1-4.8 1.4-4.5 1-9.4 1.4-4.5.7-9.4 1-4.5.4-9 .4H55.6v66.7zm702-180-45.8 180H626L597.1 72.7l-27.7 111.2h-50l-45.5-180h46.8l25 120.6L576 3.9h44.7l28.9 120.9 26-120.9zM980.1 48l-68.4 186h-45.5l20.5-53.2L837 48h44.5l28.4 85.5L936.7 48zM796.4 169.7q-4.2 3.4-7.6 6.6-1.1.7-2.5 1.4-1 1-2 1.7-1.1.7-2.5 1.4-1 .7-2.4 1-3.1 1.8-6.3 2.8-3.1 1.4-6.2 2.1-3.5.7-7 1h-6.6q-4.1 0-8.3-.7t-8-2.4q-3.8-1.4-7.3-3.8-3.4-2.4-6.6-5.2-2.7-3.2-5.2-6.6-2.1-3.5-3.8-7.3-1.4-4.2-2.1-8.4-.7-4.1-.7-8.3 0-3.1.4-6.3.3-3.1 1-6.2.7-3.2 2.1-6.3 1-2.8 2.8-5.5 1.4-2.5 3.5-4.6 1.7-2 4.1-4.1 2.1-1.8 4.5-3.5 2.5-1.4 5.2-2.4 3.2-1.8 6.6-2.8 3.2-1.4 6.6-2.5 3.5-.7 7.3-1.3l7-1.4q15.9-2.1 34.4-3.5v-.7q.3-2.4-.4-4.5-.3-2.5-1.4-4.5-1.4-2.1-2.8-3.9-1.7-1.4-3.8-2.7-2.8-1.1-5.9-2.1l-6.2-1.4q-3.2-.4-6.3-.7h-6.6q-2.1 0-4.1.3-2.5 0-4.6.4-2 .3-4.5 1-2.1.4-4.1 1.1-2.5.7-5.3 1.4-2.4.6-4.8 1.7-2.4.7-4.9 1.7-2.4 1.1-4.8 2.1h-3.5v-33q6.2-1.7 20.5-4.2 3.5-.7 6.9-1 3.5-.4 7-.7 3.8-.4 7.3-.7h6.9q35.1 0 51.4 11.8 16 11.5 16 35.5v92.4h-42v-14.6zm0-20.8v-28.5q-10.8 1-17.4 2-1.7 0-3.5.4-1.4.3-3.1.7-1.7.3-3.1 1-1.8.4-3.5 1.1-1 .3-2.4.7-1.1.7-2.1 1.4-1.4.7-2.1 1.7-1 1-2.1 1.7-.7 1.4-1.4 2.5-.3 1.4-1 2.7-.4 1.4-.4 2.8-.3 1.4-.3 2.5.3 9.7 5.2 13.2 1.7 1 3.8 1.7 1.8.7 3.5 1.4 2.1.3 4.2.3 1.7.4 3.8 0h2.8q1.7-.3 3.1-.7l2.8-.6q1.3-.4 2.7-1.1l2.8-1.4q1.4-.7 2.8-1.7 1-.7 2.4-1.8 1.4-1 2.5-2m-325-19.9c0 8.7 1.3 17.4-2.1 24q-1.4 2.5-2.8 4.9-1.4 2.1-3.1 4.2-1.8 2.1-3.9 4.1-1.7 1.8-4.1 3.5-2.5 2.1-4.9 3.8-2.8 1.8-5.5 3.2-2.8 1.4-5.9 2.4-2.8 1.4-5.9 2.1-3.9 1-7.7 1.7t-7.6 1.1q-3.8.3-7.7.7H330V4.3h71.2q3.8.3 7.7.3 3.8.4 7.6.7 3.8.4 7.3.7 2.8.4 5.2 1.1 2.4.3 4.9 1.3 2.4.7 4.5 1.8 2.4 1 4.8 2.1 2.1 1 4.2 2.8 2.1 1.3 3.8 3.1 2.1 1.7 3.5 3.8 1.7 2.1 2.8 4.2 1.4 2.4 2 4.8 1.1 2.5 1.8 4.9t.7 5.2q.3 2.5.3 5.2 0 3.2-.3 6.3-.4 3.1-1.4 5.9-.7 3.1-2.1 5.9-1 2.8-2.8 5.6-1.7 2.4-3.4 4.5-2.1 2.4-4.6 4.2-2 2-4.8 3.4-2.5 1.8-5.2 2.8V86q3.8.6 7.3 2 3.8 1.1 6.9 2.8 3.5 2.1 6.6 4.2 3.1 2.4 5.9 5.2c6.6 7.3 6.9 16.7 7 28.8m-54.9-73.3q0-1.4-.4-2.4 0-1.1-.3-2.5-.4-1-.7-2-.3-1.1-1-2.1-.4-1.1-1.1-2.1-.7-1.1-1.7-2.1-1.1-.7-2.1-1.4t-2.1-1q-1-.7-2.4-1.1-1.4-.3-2.8-.7-1.4-.3-2.4-.3-1.4 0-2.8-.4h-21.5v38.3h5.9c7.6 0 13.2 0 16.3-.4q1 0 2.4-.3 1.1 0 2.5-.4 1-.3 2.4-.7 1-.3 2.1-1 1.4-.4 2.4-1.1 1-.6 2.1-1.7 1-1 1.7-2.1.7-1 1.4-2.1.4-1.3.7-2.4.7-1.4.7-2.8.3-1 .3-2.4.4-1.4.4-2.8m11.1 73.3q.3-1.7 0-3.4 0-1.8-.7-3.5-.3-1.7-1-3.1-.7-1.8-1.8-3.2-.7-1-2.1-2.4-1-1-2.4-1.7-1-1.1-2.4-1.8-1.8-.7-3.1-1-1.4-.7-2.8-1.1-1.4-.3-2.8-.3-1.4-.3-2.8-.3-1.4-.4-3.1-.4h-27.4V152h2.4q17.7 0 24.3-.4 1.7 0 3.5-.3 1.7 0 3.5-.7 1.7-.3 3.4-.7 1.8-.7 3.5-1.4l2.8-1.4q1.4-.7 2.4-1.7 1-1.1 2.1-2.1 1-1.4 1.7-2.8.7-1 1.4-2.8.4-1.4.7-2.7.4-1.4.7-2.8zM54.7 37.3v50.4h19.4q21.6 0 28.5-2.8 1.7-.7 3.5-1.4 1.4-1 2.8-2.1 1.3-1 2.7-2.4 1.1-1.4 2.1-2.8 1.1-1.7 2.1-3.1.7-1.7 1-3.5.7-1.7.7-3.8.4-1.7.4-3.5 0-2.1-.4-4.5-.3-2.1-1-4.2t-1.7-3.8q-1.1-1.7-2.5-3.5-1.4-1.7-3.1-2.8-1.7-1.3-3.5-2.4-1.7-1-3.8-1.7t-4.2-1.1q-3.1-.3-6.2-.7-3.5 0-6.6-.3H72z" style="fill:#19882f"></path></svg></a><div><p>A big thanks to PCBWay for sponsoring manufacturing and assembly of our Heart‑Rate test PCB. That board uses via‑in‑pad, which makes fabrication more expensive. As always boards turned out great!</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="xip-management-and-app-ui-state">XIP management and App UI state<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#xip-management-and-app-ui-state" class="hash-link" aria-label="Direct link to XIP management and App UI state" title="Direct link to XIP management and App UI state">​</a></h3>
<p>We introduced an XIP manager and refined app state handling to safely disable XIP when the screen is off. This reduces baseline current consumption while ensuring apps and UI code don’t crash when XIP is unavailable. Changes included:</p>
<ul>
<li>Keep app UI code in external flash, but keep app logic in internal flash so it can run while XIP is off.</li>
<li>Add an app “visible/hidden” state so UI updates don’t run when XIP is disabled.</li>
<li>Careful walkthrough of what can live in external flash and what can’t:<!-- -->
<ul>
<li>Since we disable XIP when the screen is off, background code can’t live in external flash anymore.</li>
<li><code>mcumgr</code> and USB live in XIP as they’re only needed during updates. We explicitly enable them when performing updates in the <a href="https://github.com/ZSWatch/ZSWatch/blob/main/app/src/applications/update/update_app.c" target="_blank" rel="noopener noreferrer">update app</a>.</li>
</ul>
</li>
</ul>
<p>For apps where the UI code is placed in QSPI flash with XIP, apps now need to guard like <a href="https://github.com/ZSWatch/ZSWatch/blob/e3052acf96fc31c813b4050af3b9a3d32d527b26/app/src/applications/stopwatch/stopwatch_app.c#L158" target="_blank" rel="noopener noreferrer">this</a>:</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">static</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">update_elapsed_time</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">void</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">stopwatch_data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">state </span><span class="token operator">==</span><span class="token plain"> STOPWATCH_STATE_RUNNING</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token class-name">uint64_t</span><span class="token plain"> current_time </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">k_uptime_get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      stopwatch_data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">elapsed_ms </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token class-name">uint32_t</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">current_time </span><span class="token operator">-</span><span class="token plain"> stopwatch_data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">start_time_ms</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)">// Only update UI if XIP is enabled and UI is visible</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">app</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">current_state </span><span class="token operator">==</span><span class="token plain"> ZSW_APP_STATE_UI_VISIBLE</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token function" style="color:rgb(80, 250, 123)">stopwatch_ui_update_time</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">stopwatch_data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">elapsed_ms</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-applications">New Applications<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#new-applications" class="hash-link" aria-label="Direct link to New Applications" title="Direct link to New Applications">​</a></h3>
<ul>
<li>
<p>FFT Spectrum visualizer with an emulated mic driver for the Linux/native build (handy for quick dev and testing).</p>
<video controls="" src="https://github.com/user-attachments/assets/73f3b879-9343-4f80-ae69-938d120bc3fd" style="width:100%;max-height:420px"></video>
</li>
<li>
<p>Calculator app based on <a href="https://github.com/zephyrproject-rtos/zephyr/tree/main/samples/subsys/smf/smf_calculator" target="_blank" rel="noopener noreferrer">Zephyr’s SMF sample</a>.</p>
<a href="https://github.com/user-attachments/assets/841fbd2e-b997-4f68-b037-094cb0d60fca" target="_blank" rel="noopener noreferrer"><img src="https://github.com/user-attachments/assets/841fbd2e-b997-4f68-b037-094cb0d60fca" alt="Calculator app on ZSWatch" style="max-width:320px;width:100%"></a>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="firmware-updates-over-usb">Firmware updates over USB<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#firmware-updates-over-usb" class="hash-link" aria-label="Direct link to Firmware updates over USB" title="Direct link to Firmware updates over USB">​</a></h3>
<p>We now support firmware updates over USB (in addition to BLE) using the browser’s WebSerial API. This means you can also recover a watch that’s stuck or has broken firmware by entering MCUBoot and performing a serial recovery directly from the website.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="testability-and-power-consumption">Testability and power consumption<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#testability-and-power-consumption" class="hash-link" aria-label="Direct link to Testability and power consumption" title="Direct link to Testability and power consumption">​</a></h3>
<p>To keep power consumption low while still allowing automated tests on the same firmware, USB stays enabled for ~20s after boot so CI can connect and run firmware‑update tests reliably.</p>
<p>We also enabled shell command support over BLE and USB, so the watch can be managed via the website Shell Console. Added shell commands to some random functions in ZSWatch, not very useful, but fun to play around with.</p>
<a href="https://zswatch.dev/assets/images/website_usb_shell-e815bcbafac52569b6548ace51ca2c83.png" target="_blank" rel="noopener noreferrer"><img src="https://zswatch.dev/assets/images/website_usb_shell-e815bcbafac52569b6548ace51ca2c83.png" alt="Shell Console showing large shell output"></a>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="production-test-build">Production test build<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#production-test-build" class="hash-link" aria-label="Direct link to Production test build" title="Direct link to Production test build">​</a></h3>
<p>We now have a dedicated <a href="https://github.com/ZSWatch/ZSWatch/tree/main/production_test" target="_blank" rel="noopener noreferrer">production test firmware</a> that reuses much of the main firmware. This app is required for verifying hardware functions during production and will be used by Elecrow when assembling DKs (and likely future watches) to confirm that all components work correctly.</p>
<video controls="" src="https://github.com/user-attachments/assets/92a09a1a-dd70-44a3-abb9-1259be6760ec" style="width:100%;max-height:420px"></video>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-xip-works-on-zswatch-and-why-we-toggle-it">How XIP works on ZSWatch (and why we toggle it)<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#how-xip-works-on-zswatch-and-why-we-toggle-it" class="hash-link" aria-label="Direct link to How XIP works on ZSWatch (and why we toggle it)" title="Direct link to How XIP works on ZSWatch (and why we toggle it)">​</a></h3>
<p>Execute‑in‑Place (XIP) lets the MCU run code directly from external flash over the QSPI interface. This gives us a lot more flash space for features, but it comes with two important considerations:</p>
<ul>
<li>Power: Keeping QSPI and its cache active adds to idle current around 3–5 mA, which is a lot for a watch.</li>
<li>Safety: Parts of the code (e.g., some of LVGL, mcumgr/USB, etc.) reside in XIP. This code must not be called while XIP is disabled or it will crash.</li>
</ul>
<p>Some of the things we do in ZSWatch to manage this:</p>
<ul>
<li>Some LVGL components are placed in external flash. We keep the most used parts and drawing code in internal flash since XIP is slower.</li>
<li>App UI code is placed in the XIP area to save internal flash. App logic stays in internal flash so apps can continue running when the screen is off and XIP is disabled.</li>
<li>XIP manager: A small manager arbitrates XIP enable/disable and provides a simple API so code that needs XIP can request it when needed. The API is ref‑counted and when the count hits 0, XIP is disabled, and vice versa.</li>
<li>App visibility state: Apps are notified when their UI is visible/hidden so they don’t call into LVGL (or other XIP code paths) when XIP is off.</li>
<li>On‑demand features: <code>mcumgr</code> and USB live in the XIP area and are only enabled for updates.</li>
</ul>
<p>Result: Idle current drops from ~5 mA to ~500 µA with the display off. When you open an app or start an update, XIP is enabled as needed and then turned off again when we return to an idle screen‑off state or when a firmware update finishes. Going forward we’ll have to be more careful with what lives in XIP and only things that aren’t needed while the screen is off.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What’s next<a href="https://zswatch.dev/blog/progress-hw-xip-usb-power#whats-next" class="hash-link" aria-label="Direct link to What’s next" title="Direct link to What’s next">​</a></h3>
<ul>
<li>Continue power profiling, there’s more to do.</li>
<li>Validate the Dev Kit when received.</li>
<li>Work has started on a completely reworked case for the upcoming ZSWatch.</li>
</ul>
<br>
<p>Want to stay in the loop? Subscribe below for updates!</p>
<form class="signup_Jd1d" action="https://zswatch.pikapod.net/subscription/form" method="post"><div class="center_lsS9"><div class="signupTitle_Ta4P">Sign up for updates here</div><input type="hidden" name="nonce"><div><input type="email" required="" placeholder="Enter your email" class="emailInput_uoO2" name="email"><input type="submit" class="subscribeBtn_r9gI" value="Subscribe"></div><a href="https://zswatch.dev/blog" class="blogReminder_Sf3u">Read the blog for latest info</a><p hidden=""><input id="2cca0" type="checkbox" name="l" checked="" value="2cca0c50-ef0d-4339-b695-9e559f4a4359"><label for="2cca0">ZSWatch Test List</label><br></p></div></form>
<hr>]]></content:encoded>
            <category>ZSWatch</category>
            <category>ZSWatch Hardware</category>
            <category>ZSWatch Software</category>
        </item>
        <item>
            <title><![CDATA[Development Kit Prototype]]></title>
            <link>https://zswatch.dev/blog/progress-devkit-prototype</link>
            <guid>https://zswatch.dev/blog/progress-devkit-prototype</guid>
            <pubDate>Wed, 30 Jul 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[We’ve made great progress on the hardware front! Our new development kit is the next step toward a more refined ZSWatch, and it allows us to test key features before shrinking everything down to the final form factor.]]></description>
            <content:encoded><![CDATA[<p>We’ve made great progress on the hardware front! Our new development kit is the next step toward a more refined ZSWatch, and it allows us to test key features before shrinking everything down to the final form factor.</p>
<p>This Devkit isn’t just for internal testing, it’s also for developers who want to get an early start building software for ZSWatch. It gives full access to all interfaces, and we’ll be sharing more info soon on how to get one.</p>
<img src="https://zswatch.dev/assets/images/dk-7fa19d2e39705409f218d2a989f8d990.jpg" alt="ZSWatch Development Kit PCB">
<p>Let’s dive into the details....</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="zswatch-development-kit">ZSWatch Development Kit<a href="https://zswatch.dev/blog/progress-devkit-prototype#zswatch-development-kit" class="hash-link" aria-label="Direct link to ZSWatch Development Kit" title="Direct link to ZSWatch Development Kit">​</a></h3>
<p>As a first step in the next ZSWatch design, we created a Development Kit to try out all the new concepts before shrinking everything down to a compact PCB for the final watch.</p>
<p>We’ve completed the prototype design and received the boards. We made a few mistakes, but nothing that couldn’t be manually patched on the PCBs, including:</p>
<ul>
<li>Misunderstood USB-C cable routing, so UART on the Dock was connected to SWD on the Devkit. Thankfully, this was easy to patch using the 0-ohm jumpers we had routed.</li>
<li>The display LED driver didn’t handle unused LED channels well (we only used 2 out of 4), so we’ll switch back to the original driver, which is slightly larger but only has 2 channels—perfect for our use case.</li>
<li>2-pin SMD headers were unstable and led to crooked soldering. We’re switching to through-hole headers in the next revision for better alignment.</li>
<li>Shrink it down a bit for cheaper PCBs.</li>
</ul>
<p>Some of the Devkit features:</p>
<ul>
<li>Each component has its own power header, allowing easy power consumption debugging using a current profiler in ampere mode.</li>
<li>Breakout of pins going to the Health Tracking PCB.</li>
<li>I²S header for potential speaker support.</li>
<li>USB-C connector for exposing ZSWatch signals.</li>
</ul>
<p>We also tested UV printing from PCBWay and it looks pretty nice! We'll tune the colors a bit in the next version. UV printing adds only a few dollars per PCB, so we think it's worth keeping.</p>
<p>Each feature is laid out in its own area to make the board easy to explore. Headers allow easy access for current measurements.</p>
<img src="https://zswatch.dev/assets/images/dk-render-19ca7d63a2f684212ff6e48241e94564.png" alt="ZSWatch Devkit render with labeled components">
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="devkit-and-dock-usb-c-interface">Devkit and Dock USB-C Interface<a href="https://zswatch.dev/blog/progress-devkit-prototype#devkit-and-dock-usb-c-interface" class="hash-link" aria-label="Direct link to Devkit and Dock USB-C Interface" title="Direct link to Devkit and Dock USB-C Interface">​</a></h3>
<p>One of the biggest updates in this Devkit is the new USB-C interface, which replaces the hard-to-source magnetic connector we used previously.
The final ZSWatch will have a waterproof USB-C connector that connects to a new "Dock". This connector utilizes the extra pins in USB 3 to expose SWD, UART, and RESET, in addition to standard USB functionality.</p>
<img src="https://zswatch.dev/assets/images/dk-dock-65c9d0fe149e9c94b9ba2b820eb1f341.jpg" alt="ZSWatch USB-C Dock prototype">
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>The dock is fully optional for none development use.</p></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="heres-a-high-level-diagram-of-how-it-works">Here’s a high-level diagram of how it works<a href="https://zswatch.dev/blog/progress-devkit-prototype#heres-a-high-level-diagram-of-how-it-works" class="hash-link" aria-label="Direct link to Here’s a high-level diagram of how it works" title="Direct link to Here’s a high-level diagram of how it works">​</a></h4>
<p>The dock is optional and is meant to make development and debugging easier.</p>
<img src="https://zswatch.dev/assets/images/usb.drawio-74e0bc688b2b99dab58de880ee55b816.png" alt="USB-C signal breakout schematic">
<br>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>USB-C pin usage</summary><div><div class="collapsibleContent_i85q"><img src="https://zswatch.dev/assets/images/dock-usb-sch-d792a22761307c3beb5c42d832bd7c9e.png" alt="ZSWatch Dock USB-C schematic"></div></div></details>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="health-tracking-prototype">Health tracking prototype<a href="https://zswatch.dev/blog/progress-devkit-prototype#health-tracking-prototype" class="hash-link" aria-label="Direct link to Health tracking prototype" title="Direct link to Health tracking prototype">​</a></h3>
<p><a href="https://github.com/kampi" target="_blank" rel="noopener noreferrer">Daniel</a> have made good progress in fixing up our initial driver for the MAX32664 Biometric Hub and now we get good readings from it. We will continue testing the performance. Read more about it <a href="https://www.linkedin.com/posts/daniel-kampert_zswatch-zswatch-zephyr-activity-7355485066313015297-EzP6" target="_blank" rel="noopener noreferrer">here in Daniels Linkedin post</a></p>
<p>We are also working in <a href="https://github.com/zephyrproject-rtos/zephyr/pull/93484" target="_blank" rel="noopener noreferrer">upstreaming support for health data</a> and <a href="https://github.com/zephyrproject-rtos/zephyr/pull/93674" target="_blank" rel="noopener noreferrer">our driver to Zephyr</a>.</p>
<img src="https://zswatch.dev/assets/images/hr_progress-b1f6c775cc23010d39e5b37b0334530a.png" alt="ZSWatch Devkit render with labeled components">
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="next-up">Next up<a href="https://zswatch.dev/blog/progress-devkit-prototype#next-up" class="hash-link" aria-label="Direct link to Next up" title="Direct link to Next up">​</a></h3>
<ul>
<li>Order next PCB revision with fixes</li>
<li>Begin integration of health-tracking components</li>
<li>Finalize UV print color tuning</li>
<li>Start work on new ZSWatch hosuing and design the PCB accordinly</li>
</ul>
<br>
<p><em>Want to stay in the loop? Subscribe below for updates!</em></p>
<form class="signup_Jd1d" action="https://zswatch.pikapod.net/subscription/form" method="post"><div class="center_lsS9"><div class="signupTitle_Ta4P">Sign up for updates here</div><input type="hidden" name="nonce"><div><input type="email" required="" placeholder="Enter your email" class="emailInput_uoO2" name="email"><input type="submit" class="subscribeBtn_r9gI" value="Subscribe"></div><a href="https://zswatch.dev/blog" class="blogReminder_Sf3u">Read the blog for latest info</a><p hidden=""><input id="2cca0" type="checkbox" name="l" checked="" value="2cca0c50-ef0d-4339-b695-9e559f4a4359"><label for="2cca0">ZSWatch Test List</label><br></p></div></form>]]></content:encoded>
            <category>ZSWatch</category>
        </item>
        <item>
            <title><![CDATA[Health PCB and Firmware Update]]></title>
            <link>https://zswatch.dev/blog/progress-hr-fota</link>
            <guid>https://zswatch.dev/blog/progress-hr-fota</guid>
            <pubDate>Thu, 15 May 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[It's now been two months since our last update and a new one is very much due!]]></description>
            <content:encoded><![CDATA[<p>It's now been two months since our last update and a new one is very much due!</p>
<p>We’ve hit two major milestones:</p>
<ul>
<li>A prototype PCB for health tracking</li>
<li>Firmware updates over USB and BLE</li>
</ul>
<img src="https://zswatch.dev/assets/images/hr-c78029319a0701ee61bf8a1084c5aebb.jpg">
<p>Let’s dive into the details....</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="health-tracking-prototype">Health Tracking Prototype<a href="https://zswatch.dev/blog/progress-hr-fota#health-tracking-prototype" class="hash-link" aria-label="Direct link to Health Tracking Prototype" title="Direct link to Health Tracking Prototype">​</a></h3>
<p>We’ve completed the design and assembly of a prototype board to validate the future health-tracking add-on PCB for ZSWatch. This board helps us test components, write drivers, and troubleshoot more easily before moving to a final compact version.</p>
<p>To simplify testing, we integrated an <strong>nRF54L15 BLE MCU</strong>, allowing the board to operate as a standalone unit.</p>
<p>The cool part? It can stream heart rate data live to the ZSWatch over Bluetooth! Below is a quick demo of heart rate data being plotted in real time. It's still very much a hacky prototype—but it works.</p>
<img src="https://zswatch.dev/assets/images/hr_ble-9fc18b18688da18d738fe51b1b592167.jpg">
<p>Check out the in-progress driver and app here:<br>
<a href="https://github.com/ZSWatch/Zephyr-MAX32664C" target="_blank" rel="noopener noreferrer">https://github.com/ZSWatch/Zephyr-MAX32664C</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="firmware-updates-via-ble-and-usb">Firmware Updates via BLE and USB<a href="https://zswatch.dev/blog/progress-hr-fota#firmware-updates-via-ble-and-usb" class="hash-link" aria-label="Direct link to Firmware Updates via BLE and USB" title="Direct link to Firmware Updates via BLE and USB">​</a></h3>
<p>We’ve added a bootloader, which means you can now update the ZSWatch firmware wirelessly via BLE—or through USB (in case ZSWatch firmware breaks and Bluetooth isn’t available.).</p>
<p>Even better: you can update directly from the <a href="https://zswatch.dev/update" target="_blank" rel="noopener noreferrer">Firmware Update page on zswatch.dev</a>.<br>
<!-- -->Firmware artifacts are pulled from GitHub Actions automatically, making updates simple.</p>
<p>We also added support for uploading the full <strong>filesystem image</strong>, which contains most UI assets.</p>
<img src="https://zswatch.dev/assets/images/fota-e84e16bec7af6daab9f64e51c1c1be43.png">
<p>Improvements for later:</p>
<ul>
<li>Ideally, only real known working releases should show</li>
<li>Bundle firmware and filesystem into a single update process</li>
</ul>
<p>You can also update the firmware using <a href="https://www.nordicsemi.com/Products/Development-tools/nRF-Connect-Device-Manager" target="_blank" rel="noopener noreferrer">nRF Connect Device Manager</a> or other tools listed in the <a href="https://docs.zephyrproject.org/latest/services/device_mgmt/mcumgr.html#tools-libraries" target="_blank" rel="noopener noreferrer">Zephyr documentation</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bonus-xip">Bonus (XIP)<a href="https://zswatch.dev/blog/progress-hr-fota#bonus-xip" class="hash-link" aria-label="Direct link to Bonus (XIP)" title="Direct link to Bonus (XIP)">​</a></h3>
<p>Another smaller, but very important update is that we after some fiddling around got <strong>XIP (Execute-in-Place)</strong> working on ZSWatch, allowing code to be run directly from the external flash. It was essential to fit the bootloader and USB support, and it opens up a lot more headroom for the firmware going forward.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="next-up">Next up<a href="https://zswatch.dev/blog/progress-hr-fota#next-up" class="hash-link" aria-label="Direct link to Next up" title="Direct link to Next up">​</a></h3>
<ul>
<li>Evaluate the health tracking PCB’s performance</li>
<li>Design a casing for wearing the health tracking PCB in order</li>
</ul>
<br>
<p><em>Want to stay in the loop? Subscribe below for updates!</em></p>
<form class="signup_Jd1d" action="https://zswatch.pikapod.net/subscription/form" method="post"><div class="center_lsS9"><div class="signupTitle_Ta4P">Sign up for updates here</div><input type="hidden" name="nonce"><div><input type="email" required="" placeholder="Enter your email" class="emailInput_uoO2" name="email"><input type="submit" class="subscribeBtn_r9gI" value="Subscribe"></div><a href="https://zswatch.dev/blog" class="blogReminder_Sf3u">Read the blog for latest info</a><p hidden=""><input id="2cca0" type="checkbox" name="l" checked="" value="2cca0c50-ef0d-4339-b695-9e559f4a4359"><label for="2cca0">ZSWatch Test List</label><br></p></div></form>]]></content:encoded>
            <category>ZSWatch</category>
        </item>
        <item>
            <title><![CDATA[Looking for feedback]]></title>
            <link>https://zswatch.dev/blog/feedback</link>
            <guid>https://zswatch.dev/blog/feedback</guid>
            <pubDate>Wed, 19 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[We will be doing a redesign of much of the ZSWatch hardware. Before getting too deep into it we would like to collect some feedback and ideas.]]></description>
            <content:encoded><![CDATA[<p>We will be doing a redesign of much of the ZSWatch hardware. Before getting too deep into it we would like to collect some feedback and ideas.
Please fill in the form below.</p>
<p>If the embedded form doesn't work for some reason you can fill it in <a href="https://docs.google.com/forms/d/e/1FAIpQLSc5x3omDgfKNch9FyK3_1oTg-3tS38z_F2DC7QWCfxR-AVKDg/viewform?usp=sharing" target="_blank" rel="noopener noreferrer">here too.</a></p>
<iframe src="https://docs.google.com/forms/d/e/1FAIpQLSc5x3omDgfKNch9FyK3_1oTg-3tS38z_F2DC7QWCfxR-AVKDg/viewform?embedded=true" width="100%" height="1900" frameborder="0" marginheight="0" marginwidth="0">Läser in …</iframe>
<form class="signup_Jd1d" action="https://zswatch.pikapod.net/subscription/form" method="post"><div class="center_lsS9"><div class="signupTitle_Ta4P">Sign up for updates here</div><input type="hidden" name="nonce"><div><input type="email" required="" placeholder="Enter your email" class="emailInput_uoO2" name="email"><input type="submit" class="subscribeBtn_r9gI" value="Subscribe"></div><a href="https://zswatch.dev/blog" class="blogReminder_Sf3u">Read the blog for latest info</a><p hidden=""><input id="2cca0" type="checkbox" name="l" checked="" value="2cca0c50-ef0d-4339-b695-9e559f4a4359"><label for="2cca0">ZSWatch Test List</label><br></p></div></form>]]></content:encoded>
            <category>ZSWatch</category>
            <category>feedback</category>
        </item>
        <item>
            <title><![CDATA[We received funding!]]></title>
            <link>https://zswatch.dev/blog/funding</link>
            <guid>https://zswatch.dev/blog/funding</guid>
            <pubDate>Fri, 14 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[For the last few months there have not been much progress in ZSWatch. But that's about to change because we have received 50 000 € from the NLnet Foundation to take ZSWatch to the next level!]]></description>
            <content:encoded><![CDATA[<p float="left"><img src="https://zswatch.dev/assets/images/ZSWatch_logo_with_text-72f48899e46d99fda791397c9a456811.png" width="33%"><img src="https://zswatch.dev/assets/images/NGI0Core_tag-3a860411da708e87a7e351d03889eedd.png" width="33%"><img src="https://zswatch.dev/assets/images/nlnet_banner-cd0288bc07d92e3de932043593ba2c70.png" width="33%"></p>
<p>For the last few months there have not been much progress in ZSWatch. <strong>But</strong> that's about to change because we have received 50 000 € from the <a href="https://nlnet.nl/project/ZSWatch/" target="_blank" rel="noopener noreferrer">NLnet Foundation</a> to take ZSWatch to the next level!</p>
<blockquote>
<p><a href="https://nlnet.nl/commonsfund" target="_blank" rel="noopener noreferrer">NGI0 Commons Fund</a>, a fund established by <a href="https://nlnet.nl/" target="_blank" rel="noopener noreferrer">NLnet</a> with financial support from the European Commission's <a href="https://ngi.eu/" target="_blank" rel="noopener noreferrer">Next Generation Internet</a> program. Learn more at the <a href="https://nlnet.nl/project/ZSWatch" target="_blank" rel="noopener noreferrer">NLnet project page</a>.</p>
</blockquote>
<blockquote>
<p>We support organisations and people who contribute to an open internet for all. We fund projects that help fix the internet through open hardware, open software, open standards, open science and open data.</p>
</blockquote>
<p>Which ZSWatch falls pretty well under.</p>
<p>Here we go into more details about what this means.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-the-funding-will-be-used">How the funding will be used<a href="https://zswatch.dev/blog/funding#how-the-funding-will-be-used" class="hash-link" aria-label="Direct link to How the funding will be used" title="Direct link to How the funding will be used">​</a></h3>
<p>The funding will allow <a href="https://github.com/jakkra" target="_blank" rel="noopener noreferrer">me</a> to work 50% and <a href="https://github.com/kampi" target="_blank" rel="noopener noreferrer">Daniel</a> to work 20% on ZSWatch. The rest of the money will go to hardware and hardware prototyping costs. The funded project will run for 1 year.</p>
<p>The goal is to both rework and improve ZSWatch. Mainly to make it more accessible to a broader audience and grow the community. This will be done by making it cheaper, easier to assemble and use more accessible parts. Right now getting all parts and assembling a ZSWatch is not super easy, this we aim to change!</p>
<p><strong>Our goal is within one year have a robust watch that is easy to assembly that you can easily get your hands on!</strong></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="high-level-plan">High level plan<a href="https://zswatch.dev/blog/funding#high-level-plan" class="hash-link" aria-label="Direct link to High level plan" title="Direct link to High level plan">​</a></h3>
<p>There are so much more details defined, but including that would make this post very long. So here is the high level tasks we aim to finish.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Goals</div><div class="admonitionContent_BuS1"><ul>
<li>Support daughter board interface attached to the main PCB.<!-- -->
<ul>
<li>This allows to keep core ZSWatch chaper.</li>
<li>Allows expandability.</li>
<li>Expand with any feature you need.<!-- -->
<ul>
<li>Health tracking (this we will do).</li>
<li>Additional sensors.</li>
<li>A GPS maybe?</li>
<li>Go crazy and add cellular maybe?</li>
<li>Unlimited possibilities.</li>
</ul>
</li>
</ul>
</li>
<li>New daughter board for health tracking.<!-- -->
<ul>
<li>This will be a optional PCB that connects to the main PCB.</li>
<li>Since HR algorithms are no easy task, we are planning to use <a href="https://www.analog.com/en/products/max32664.html" target="_blank" rel="noopener noreferrer">MAX32664(C) Biometric Snesor Hub with embedded algorithms</a>.</li>
</ul>
</li>
<li>New main board.<!-- -->
<ul>
<li>Cheaper.</li>
<li>Optimize physical layout for improved mechanical assembly.</li>
<li>Changes to accomodate daughter boards.</li>
</ul>
</li>
<li>Change of components on ZSWatch.</li>
<li>New simpler dock.</li>
<li>Case redesign.</li>
<li>Production test software.</li>
<li>Documentation using <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>.<!-- -->
<ul>
<li>You are reading on it now!</li>
<li>We will host the blog and all documentation.</li>
</ul>
</li>
<li>Improve software usability.</li>
<li>Lightwight app store.<!-- -->
<ul>
<li>We want to investigate <a href="https://docs.zephyrproject.org/latest/services/llext/index.html" target="_blank" rel="noopener noreferrer">Zephyr LLEXT</a> to see if it's feasable to dynamically load applications to ZSWatch.</li>
</ul>
</li>
<li>Testing.<!-- -->
<ul>
<li>We need more automated tests to easy catch regressions.</li>
</ul>
</li>
<li>Phone integration improvements.</li>
</ul></div></div>
<p>Also we are looking for feedback, see the <a href="https://zswatch.dev/blog/feedback">Feedback Blog Post</a></p>
<p>We will post updates of our progress so don't forget to sign up for our email list!</p>
<form class="signup_Jd1d" action="https://zswatch.pikapod.net/subscription/form" method="post"><div class="center_lsS9"><div class="signupTitle_Ta4P">Sign up for updates here</div><input type="hidden" name="nonce"><div><input type="email" required="" placeholder="Enter your email" class="emailInput_uoO2" name="email"><input type="submit" class="subscribeBtn_r9gI" value="Subscribe"></div><a href="https://zswatch.dev/blog" class="blogReminder_Sf3u">Read the blog for latest info</a><p hidden=""><input id="2cca0" type="checkbox" name="l" checked="" value="2cca0c50-ef0d-4339-b695-9e559f4a4359"><label for="2cca0">ZSWatch Test List</label><br></p></div></form>]]></content:encoded>
            <category>ZSWatch</category>
            <category>NLnet Foundation</category>
        </item>
        <item>
            <title><![CDATA[What is ZSWatch]]></title>
            <link>https://zswatch.dev/blog/intro</link>
            <guid>https://zswatch.dev/blog/intro</guid>
            <pubDate>Thu, 13 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[If you have not heard of ZSWatch before, here is an intro!]]></description>
            <content:encoded><![CDATA[<p>If you have not heard of ZSWatch before, here is an intro!</p>
<!-- -->
<!-- -->
<p>Built on the <a href="https://www.zephyrproject.org/" target="_blank" rel="noopener noreferrer">Zephyr™ Project</a> RTOS, hence the name <strong>ZSWatch</strong> - <em>Zephyr Smartwatch</em>.</p>
<p>ZSWatch is a free and open source smartwatch you can build almost from scratch - including software, hardware, and mechanics. Everything from the lowest level BLE radio driver code to PCB and casing is available and can be customised to suit your needs.</p>
<center>How ZSWatch looks like today.</center>
<img src="https://zswatch.dev/assets/images/stainless_front_wide-22e4836b48c8a2b9bd15aa25129d20a9.JPG">
<img src="https://zswatch.dev/assets/images/clear_front_wide-d6b4d278a50a7a4773ed2409df869256.JPG">
<img src="https://zswatch.dev/assets/images/stainless_stand-9c6b90a37cb89673a33ab2075864662f.JPG">
<p></p>
<center>Video walking through some of the UI and features.</center>
<div style="width:100%;height:360px"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="software">Software<a href="https://zswatch.dev/blog/intro#software" class="hash-link" aria-label="Direct link to Software" title="Direct link to Software">​</a></h3>
<p>Short feature overview:</p>
<ul>
<li>Bluetooth LE communications with <a href="https://codeberg.org/Freeyourgadget/Gadgetbridge" target="_blank" rel="noopener noreferrer">GadgetBridge</a> Android app.</li>
<li>Multiple Watchfaces showing:<!-- -->
<ul>
<li>Standard stuff such as time, date, battery</li>
<li>Weather</li>
<li>Step count</li>
<li>Number of unread notifications</li>
<li>Environmental data</li>
<li>...</li>
</ul>
</li>
<li>Pop-up notifications</li>
<li>Application picker and app concept<!-- -->
<ul>
<li>Setting menu system, with easy extendability</li>
<li>Music control app</li>
<li>Settings app</li>
<li>Compass app</li>
<li>etc.</li>
</ul>
</li>
<li>Step counting</li>
<li>Gestures</li>
<li>iOS support (limited)</li>
<li>And much more
...</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hardware">Hardware<a href="https://zswatch.dev/blog/intro#hardware" class="hash-link" aria-label="Direct link to Hardware" title="Direct link to Hardware">​</a></h3>
<p>ZSWatch is equipped with a range of powerful hardware components that make it a versatile and capable smartwatch.</p>
<img src="https://zswatch.dev/assets/images/Hardware_Overview_transparent-c624384ccf1086c7c9d4efc76852386b.png">
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Components description</summary><div><div class="collapsibleContent_i85q"><ul>
<li>
<p>nRF5340 BLE chip (<a href="https://www.u-blox.com/en/product/nora-b1-series-open-cpu" target="_blank" rel="noopener noreferrer">u-blox NORA-B10 module</a>): The watch is powered by a 128 MHz dual-core nRF5340 BLE chip, providing high-performance processing capabilities.</p>
</li>
<li>
<p>Nordic <a href="https://docs.nordicsemi.com/category/npm1300-category" target="_blank" rel="noopener noreferrer">nPM1300</a> PMIC: The power management integrated circuit ensures efficient power delivery and battery life estimations.</p>
</li>
<li>
<p>240x240 round display: ZSWatch features a vibrant and responsive 240x240 round display with a capacitive touch screen, ensuring a smooth and intuitive user experience.</p>
</li>
<li>
<p>IMU <a href="https://www.bosch-sensortec.com/media/boschsensortec/downloads/datasheets/bst-bmi270-ds000.pdf" target="_blank" rel="noopener noreferrer">Bosch BMI270</a>: The integrated IMU allows for advanced features such as gesture-based navigation and smartwatch wake-up by arm movement.</p>
</li>
<li>
<p>Bosch <a href="https://www.bosch-sensortec.com/products/environmental-sensors/gas-sensors/bme688/" target="_blank" rel="noopener noreferrer">BME688</a> Environmental sensor: The BME688 sensor provides AI-enhanced environmental data, enabling the watch to monitor air quality and other environmental parameters.</p>
</li>
<li>
<p>Bosch <a href="https://www.bosch-sensortec.com/products/environmental-sensors/pressure-sensors/bmp581/" target="_blank" rel="noopener noreferrer">BMP581</a> High-performance pressure sensor: The BMP581 sensor offers accurate pressure measurements with a precision of approximately 20cm.</p>
</li>
<li>
<p>ST <a href="https://www.st.com/resource/en/datasheet/lis2mdl.pdf" target="_blank" rel="noopener noreferrer">LIS2MDLTR</a> Magnetometer: The magnetometer enables the watch to detect magnetic fields, opening up possibilities for compass and navigation applications.</p>
</li>
<li>
<p>Macronix <a href="https://www.mouser.de/datasheet/2/819/MX25U51245G_2c_1_8V_2c_512Mb_2c_v1_4-3371129.pdf" target="_blank" rel="noopener noreferrer">MX25U51245GZ4I00</a> 64 MB external flash: The external flash provides large storage space for data and UI resources.</p>
</li>
<li>
<p>Broadcom <a href="https://docs.broadcom.com/docs/AV02-4755EN" target="_blank" rel="noopener noreferrer">APDS-9306-065</a> Light Sensor: The light sensor enables automatic brightness control.</p>
</li>
<li>
<p>Micro Crystal <a href="https://www.microcrystal.com/en/products/real-time-clock-rtc-modules/rv-8263-c8" target="_blank" rel="noopener noreferrer">RV-8263-C8</a> RTC: The real-time clock module ensures accurate timekeeping and supports alarm functions.</p>
</li>
<li>
<p>Knowles <a href="https://www.knowles.com/docs/default-source/model-downloads/spk0641ht4h-1-rev-a.pdf" target="_blank" rel="noopener noreferrer">SPK0641HT4H-1</a> I2S microphone: The built-in microphone allows for audio recording and voice control capabilities.</p>
</li>
</ul><p>Option to not mount sensors: ZSWatch offers the flexibility to exclude certain sensors, allowing for cost optimization based on specific requirements.</p><p>This powerful combination of hardware components ensures that ZSWatch delivers a rich and immersive smartwatch experience.</p></div></div></details>
<form class="signup_Jd1d" action="https://zswatch.pikapod.net/subscription/form" method="post"><div class="center_lsS9"><div class="signupTitle_Ta4P">Sign up for updates here</div><input type="hidden" name="nonce"><div><input type="email" required="" placeholder="Enter your email" class="emailInput_uoO2" name="email"><input type="submit" class="subscribeBtn_r9gI" value="Subscribe"></div><a href="https://zswatch.dev/blog" class="blogReminder_Sf3u">Read the blog for latest info</a><p hidden=""><input id="2cca0" type="checkbox" name="l" checked="" value="2cca0c50-ef0d-4339-b695-9e559f4a4359"><label for="2cca0">ZSWatch Test List</label><br></p></div></form>]]></content:encoded>
            <category>ZSWatch</category>
            <category>intro</category>
        </item>
    </channel>
</rss>